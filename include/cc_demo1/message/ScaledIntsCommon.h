// Generated by commsdsl2comms v7.0.0

/// @file
/// @brief Contains common template parameters independent functionality of
///    @ref cc_demo1::message::ScaledInts message and its fields.

#pragma once

#include <cstdint>
#include "cc_demo1/field/LatCommon.h"
#include "cc_demo1/field/LonCommon.h"

namespace cc_demo1
{

namespace message
{

/// @brief Common types and functions for fields of 
///     @ref cc_demo1::message::ScaledInts message.
/// @see cc_demo1::message::ScaledIntsFields
struct ScaledIntsFieldsCommon
{
    /// @brief Common types and functions for
    ///     @ref cc_demo1::message::ScaledIntsFields::Lat field.
    using LatCommon = cc_demo1::field::LatCommon;

    /// @brief Common types and functions for
    ///     @ref cc_demo1::message::ScaledIntsFields::Lon field.
    using LonCommon = cc_demo1::field::LonCommon;

    /// @brief Common types and functions for
    ///     @ref cc_demo1::message::ScaledIntsFields::Height field.
    struct HeightCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_demo1::message::ScaledIntsFields::Height field.
        using ValueType = std::int32_t;

        /// @brief Name of the @ref cc_demo1::message::ScaledIntsFields::Height field.
        static const char* name()
        {
            return "Height";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };

    /// @brief Common types and functions for
    ///     @ref cc_demo1::message::ScaledIntsFields::SomeScaledVal field.
    struct SomeScaledValCommon
    {
        /// @brief Re-definition of the value type used by
        ///     cc_demo1::message::ScaledIntsFields::SomeScaledVal field.
        using ValueType = std::uint32_t;

        /// @brief Name of the @ref cc_demo1::message::ScaledIntsFields::SomeScaledVal field.
        static const char* name()
        {
            return "Some Scaled Value";
        }

        /// @brief Compile time detection of special values presence.
        static constexpr bool hasSpecials()
        {
            return false;
        }
    };
};

/// @brief Common types and functions of 
///     @ref cc_demo1::message::ScaledInts message.
struct ScaledIntsCommon
{
    /// @brief Name of the @ref cc_demo1::message::ScaledInts message.
    static const char* name()
    {
        return "Scaled Ints";
    }
};

} // namespace message

} // namespace cc_demo1
